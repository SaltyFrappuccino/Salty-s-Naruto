{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SaltyFrappuccino\\\\repos\\\\AI-Mammoth-agent\\\\web\\\\src\\\\pages\\\\VisualizationPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { PieChart, Pie, Cell, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { useNavigate } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n_c = Container;\nconst ChartContainer = styled.div`\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  margin-bottom: 2rem;\n`;\n_c2 = ChartContainer;\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  margin-bottom: 1rem;\n  color: #333;\n`;\n_c3 = Title;\nconst BackButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin-bottom: 2rem;\n  padding: 0.5rem 1rem;\n  background: #f0f0f0;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n_c4 = BackButton;\nconst VisualizationPage = () => {\n  _s();\n  var _chartsData$complianc;\n  const [chartsData, setChartsData] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const response = await fetch('/static/visualizations/data.json');\n        const data = await response.json();\n        setChartsData(data);\n      } catch (error) {\n        console.error('Error loading visualization data:', error);\n      }\n    };\n    loadData();\n  }, []);\n  const renderChart = chart => {\n    switch (chart.type) {\n      case 'pie':\n        return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 400,\n          children: /*#__PURE__*/_jsxDEV(PieChart, {\n            children: [/*#__PURE__*/_jsxDEV(Pie, {\n              data: chart.data,\n              dataKey: \"value\",\n              nameKey: \"name\",\n              cx: \"50%\",\n              cy: \"50%\",\n              innerRadius: chart.hole ? '60%' : 0,\n              outerRadius: \"80%\",\n              children: chart.data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                fill: chart.colors[index % chart.colors.length]\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this);\n      case 'bar':\n        return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 400,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: chart.data,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"value\",\n              fill: chart.color\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(BackButton, {\n      onClick: () => navigate(-1),\n      children: [/*#__PURE__*/_jsxDEV(FiArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), \" \\u041D\\u0430\\u0437\\u0430\\u0434 \\u043A \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u0430\\u043C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), chartsData === null || chartsData === void 0 ? void 0 : (_chartsData$complianc = chartsData.compliance) === null || _chartsData$complianc === void 0 ? void 0 : _chartsData$complianc.charts.map((chart, index) => /*#__PURE__*/_jsxDEV(ChartContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: chart.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), renderChart({\n        type: 'pie',\n        data: chart.labels.map((label, i) => ({\n          name: label,\n          value: chart.values[i]\n        })),\n        colors: chart.colors,\n        hole: chart.hole\n      })]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(VisualizationPage, \"WG8STrmY5SsW3UQhngTSw9dn+ho=\", false, function () {\n  return [useNavigate];\n});\n_c5 = VisualizationPage;\nexport default VisualizationPage;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ChartContainer\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"BackButton\");\n$RefreshReg$(_c5, \"VisualizationPage\");","map":{"version":3,"names":["React","useState","useEffect","styled","PieChart","Pie","Cell","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","useNavigate","FiArrowLeft","jsxDEV","_jsxDEV","Container","div","_c","ChartContainer","_c2","Title","h2","_c3","BackButton","button","_c4","VisualizationPage","_s","_chartsData$complianc","chartsData","setChartsData","navigate","loadData","response","fetch","data","json","error","console","renderChart","chart","type","width","height","children","dataKey","nameKey","cx","cy","innerRadius","hole","outerRadius","map","entry","index","fill","colors","length","fileName","_jsxFileName","lineNumber","columnNumber","strokeDasharray","color","onClick","compliance","charts","title","labels","label","i","name","value","values","_c5","$RefreshReg$"],"sources":["C:/Users/SaltyFrappuccino/repos/AI-Mammoth-agent/web/src/pages/VisualizationPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { PieChart, Pie, Cell, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { useNavigate } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\n\nconst Container = styled.div`\n  padding: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst ChartContainer = styled.div`\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  margin-bottom: 2rem;\n`;\n\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  margin-bottom: 1rem;\n  color: #333;\n`;\n\nconst BackButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin-bottom: 2rem;\n  padding: 0.5rem 1rem;\n  background: #f0f0f0;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n\nconst VisualizationPage = () => {\n  const [chartsData, setChartsData] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const response = await fetch('/static/visualizations/data.json');\n        const data = await response.json();\n        setChartsData(data);\n      } catch (error) {\n        console.error('Error loading visualization data:', error);\n      }\n    };\n    loadData();\n  }, []);\n\n  const renderChart = (chart) => {\n    switch(chart.type) {\n      case 'pie':\n        return (\n          <ResponsiveContainer width=\"100%\" height={400}>\n            <PieChart>\n              <Pie\n                data={chart.data}\n                dataKey=\"value\"\n                nameKey=\"name\"\n                cx=\"50%\"\n                cy=\"50%\"\n                innerRadius={chart.hole ? '60%' : 0}\n                outerRadius=\"80%\"\n              >\n                {chart.data.map((entry, index) => (\n                  <Cell key={index} fill={chart.colors[index % chart.colors.length]} />\n                ))}\n              </Pie>\n              <Tooltip />\n              <Legend />\n            </PieChart>\n          </ResponsiveContainer>\n        );\n      case 'bar':\n        return (\n          <ResponsiveContainer width=\"100%\" height={400}>\n            <BarChart data={chart.data}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"value\" fill={chart.color} />\n            </BarChart>\n          </ResponsiveContainer>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Container>\n      <BackButton onClick={() => navigate(-1)}>\n        <FiArrowLeft /> Назад к результатам\n      </BackButton>\n\n      {chartsData?.compliance?.charts.map((chart, index) => (\n        <ChartContainer key={index}>\n          <Title>{chart.title}</Title>\n          {renderChart({\n            type: 'pie',\n            data: chart.labels.map((label, i) => ({\n              name: label,\n              value: chart.values[i]\n            })),\n            colors: chart.colors,\n            hole: chart.hole\n          })}\n        </ChartContainer>\n      ))}\n    </Container>\n  );\n};\n\nexport default VisualizationPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}